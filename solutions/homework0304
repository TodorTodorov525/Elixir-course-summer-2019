1.
  def hw1(%{"a" => 1} = param) do
    Map.to_list(param)
    |> Enum.at(0)
    |> hw1()
  end

  def hw1(%{a: 1} = param) do
    Map.to_list(%{a: 1})
    |> Enum.at(0)
    |> hw1()
  end

  def hw1([]) do
    print_message_list()
  end

  def hw1([head | tail]) do
    print_message_list(head)
  end

  def hw1(param \\ {}) do
    param
    |> Tuple.to_list()
    |> hw1()
  end

  def print_message_list() do
    IO.puts("Please add some elements in the list")
  end

  def print_message_list(head) do
    IO.puts("The argument is a list, its first agument is #{to_string(head)}")
  end
  
2.
[a, [b, _], _] = [1, [2, 3], 4]

  
  
3.
  def hw3(param) do
    Enum.map(param, fn num -> num + 1 end)
  end
  
4.
  def hw4(a, b, c) do
    a + b + c
  end

  def hw4(param) do
    calc = fn
      [a, b, c] -> a + b + c
      {a, b, c} -> a + b + c
      %{a: a, b: b, c: c} -> a + b + c
    end

    calc.(param)
  end
  
5.
Enum.find_value([%{name: "Alice Addison", age: 14}, %{name: "Bob Benetton", age: 21}, %{name: "Eve Elliot", age: 18}, %{name: "Jane Doe", age: 1}], fn x -> if x.age == 1 do to_string(x.name) <> ": " <> to_string(x.age) <> " year old" end end)


6.
Enum.find_value([%{name: "Alice Addison", age: 14}, %{name: "Bob Benetton", age: 21}, %{name: "Eve Elliot", age: 18}, %{name: "Jane Doe", age: 1}], fn x -> if x.age == 1 do to_string(x.name) <> ": " <> to_string(x.age) <> " year old" end end)

7.
Enum.drop_while(["An example sentence", "Another sentence", "Third sentence"], fn x -> String.contains?(x,"a") end)


